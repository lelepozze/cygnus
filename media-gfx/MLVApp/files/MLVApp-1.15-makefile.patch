--- a/platform/qt/MLVApp.pro
+++ b/platform/qt/MLVApp.pro
@@ -122,12 +122,12 @@
 # Linux
 linux-g++*{
     gcc {
-        QMAKE_CFLAGS += -std=gnu99
+        QMAKE_CFLAGS += -std=gnu23
     } else {
-        QMAKE_CFLAGS += -std=c99
+        QMAKE_CFLAGS += -std=c23
     }
-    QMAKE_CFLAGS += -O3 -fopenmp -msse4.1 -mssse3 -msse3 -msse2 -msse -ftree-vectorize
-    QMAKE_CXXFLAGS += -fopenmp -std=c++11 -ftree-vectorize
+    QMAKE_CFLAGS += -fopenmp -msse4.1 -mssse3 -msse3 -msse2 -msse -ftree-vectorize
+    QMAKE_CXXFLAGS += -fopenmp -std=c++23 -ftree-vectorize
     LIBS += -lgomp
 }
 
@@ -460,12 +460,12 @@
 #in "Projects->Run Settings->Add Deploy Step->Make->Make arguments" field put argument "install". Qt Creator deploy feature will get active.
 linux-g++ {
     target.path = $$(HOME)/bin
-    desktop.path = $$(HOME)/.local/share/applications
+    desktop.path = $$(HOME)/local/share/applications
     desktop.files += mlvapp.desktop
-    icon512.path = $$(HOME)/.local/share/icons/hicolor/512x512/apps
+    icon512.path = $$(HOME)/local/share/icons/hicolor/512x512/apps
     icon512.files += RetinaIMG/MLVAPP.png
     tools.path = target.path
-    tools.extra = mkdir -p $$(HOME)/bin; tar -C $$(HOME)/bin -xvJf $$_PRO_FILE_PWD_/FFmpeg/ffmpegLinux.tar.xz --strip-components=1 --wildcards */ffmpeg; tar -C $$(HOME)/bin -xvJf $$_PRO_FILE_PWD_/raw2mlv/raw2mlvLinux.tar.xz --strip-components=1 --wildcards */raw2mlv
+    tools.extra = mkdir -p $$(HOME)/bin
 
     INSTALLS += target desktop icon512 tools
 }
